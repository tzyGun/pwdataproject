apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      ports:
        - name: "3001"
          port: 3001
          targetPort: 3001
      selector:
        io.kompose.service: backend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: broker
      name: broker
    spec:
      ports:
        - name: "29092"
          port: 29092
          targetPort: 29092
        - name: "9092"
          port: 9092
          targetPort: 9092
        - name: "9101"
          port: 9101
          targetPort: 9101
        - name: "9094"
          port: 9094
          targetPort: 9094
        - name: "9093"
          port: 9093
          targetPort: 9093
      selector:
        io.kompose.service: broker
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: cassandra
      name: cassandra
    spec:
      ports:
        - name: "7000"
          port: 7000
          targetPort: 7000
        - name: "9042"
          port: 9042
          targetPort: 9042
      selector:
        io.kompose.service: cassandra
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: crypto
      name: crypto
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        io.kompose.service: crypto
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: frontend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nifi
      name: nifi
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: nifi
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: pyspark
      name: pyspark
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
      selector:
        io.kompose.service: pyspark
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
      name: zookeeper
    spec:
      ports:
        - name: "2181"
          port: 2181
          targetPort: 2181
      selector:
        io.kompose.service: zookeeper
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: backend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: backend
        spec:
          containers:
            - image: backend-crypto
              name: backend
              ports:
                - containerPort: 3001
              resources: {}
          hostname: backend
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: broker
      name: broker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: broker
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: broker
        spec:
          containers:
            - env:
                - name: KAFKA_ADVERTISED_LISTENERS
                  value: DOCKER_EXTERNAL://broker:9094, PLAINTEXT://localhost:9092, EXTERNAL_CLIENT://192.168.0.11:9093
                - name: KAFKA_BROKER_ID
                  value: "1"
                - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
                  value: "0"
                - name: KAFKA_JMX_HOSTNAME
                  value: localhost
                - name: KAFKA_JMX_PORT
                  value: "9101"
                - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
                  value: DOCKER_EXTERNAL:PLAINTEXT, PLAINTEXT:PLAINTEXT, EXTERNAL_CLIENT:PLAINTEXT
                - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                  value: "1"
                - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
                  value: "1"
                - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
                  value: "1"
                - name: KAFKA_ZOOKEEPER_CONNECT
                  value: zookeeper:2181
              image: confluentinc/cp-kafka:6.1.1
              name: broker
              ports:
                - containerPort: 29092
                - containerPort: 9092
                - containerPort: 9101
                - containerPort: 9094
                - containerPort: 9093
              resources: {}
          hostname: broker
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: cassandra
      name: cassandra
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: cassandra
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: cassandra
        spec:
          containers:
            - image: cassandra
              name: cassandra
              ports:
                - containerPort: 7000
                - containerPort: 9042
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/cassandra
                  name: cassandra-claim0
          hostname: cassandra
          restartPolicy: Always
          volumes:
            - name: cassandra-claim0
              persistentVolumeClaim:
                claimName: cassandra-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: cassandra-claim0
      name: cassandra-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: crypto
      name: crypto
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: crypto
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: crypto
        spec:
          containers:
            - image: crypto-pysim
              name: crypto
              ports:
                - containerPort: 5000
              resources: {}
          hostname: crypto
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: frontend
        spec:
          containers:
            - image: frontend-crypto
              name: frontend
              ports:
                - containerPort: 3000
              resources: {}
          hostname: frontend
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nifi
      name: nifi
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nifi
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: nifi
        spec:
          containers:
            - image: apache/nifi
              name: nifi
              ports:
                - containerPort: 8000
                - containerPort: 8080
              resources: {}
              volumeMounts:
                - mountPath: /opt/nifi/nifi-current/conf/templates
                  name: nifi-claim0
          hostname: nifi
          restartPolicy: Always
          volumes:
            - name: nifi-claim0
              persistentVolumeClaim:
                claimName: nifi-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nifi-claim0
      name: nifi-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: pyspark
      name: pyspark
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: pyspark
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: pyspark
        spec:
          containers:
            - image: jupyter/pyspark-notebook
              name: pyspark
              ports:
                - containerPort: 8888
              resources: {}
              volumeMounts:
                - mountPath: /home/jovyan/
                  name: pyspark-claim0
          hostname: pyspark
          restartPolicy: Always
          volumes:
            - name: pyspark-claim0
              persistentVolumeClaim:
                claimName: pyspark-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: pyspark-claim0
      name: pyspark-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
      name: zookeeper
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: zookeeper
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --file docker-compose_v2.yml --out k8s.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: zookeeper
        spec:
          containers:
            - env:
                - name: ZOOKEEPER_CLIENT_PORT
                  value: "2181"
                - name: ZOOKEEPER_TICK_TIME
                  value: "2000"
              image: confluentinc/cp-zookeeper:6.1.1
              name: zookeeper
              ports:
                - containerPort: 2181
              resources: {}
          hostname: zookeeper
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

